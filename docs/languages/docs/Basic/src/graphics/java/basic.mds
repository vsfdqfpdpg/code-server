
            === "Label"
                ``` java
                import javax.swing.*;
                import java.awt.*;
                import java.awt.event.*;

                public class FrameTest extends JFrame implements ActionListener, FocusListener, KeyListener, MouseListener, WindowListener {
                    protected JButton button = new JButton("按钮");
                    protected JPanel panel = new JPanel();
                    protected JLabel label = new JLabel("这是一个标签");
                    protected JTextField tf = new JTextField(10);
                    protected JPasswordField pf = new JPasswordField(10);
                    protected JTextArea area = new JTextArea(3, 10);
                    protected JScrollPane sc = new JScrollPane(area);

                    protected ButtonGroup sex = new ButtonGroup();
                    protected JRadioButton man = new JRadioButton("男", true);
                    protected JRadioButton woman = new JRadioButton("女", false);

                    protected JComboBox<String> cb = new JComboBox<>();

                    protected JCheckBox sing = new JCheckBox("唱歌", true);
                    protected JCheckBox dance = new JCheckBox("跳舞");

                    protected JMenuBar mb = new JMenuBar();
                    protected JMenu menu = new JMenu("文件");
                    protected JMenuItem fileOpen = new JMenuItem("打开");
                    protected JMenuItem fileSave = new JMenuItem("保存");
                    protected JMenuItem fileExit = new JMenuItem("退出");

                    protected Image logo = Toolkit.getDefaultToolkit().createImage("https://api.freelogodesign.org/assets/thumb/logo/54769_400.png");

                    protected GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
                    protected Rectangle rec = env.getDefaultScreenDevice().getDefaultConfiguration().getBounds();

                    protected Desktop desktop = Desktop.getDesktop();

                    protected FlowLayout flow = new FlowLayout(FlowLayout.CENTER, 10, 10);
                    protected GridLayout grid = new GridLayout(9, 1, 10, 10);


                    public FrameTest() {
                        this.setTitle("这是一个窗口.");
                        this.addSystemTray();
                        this.panel.setLayout(this.grid);

                        this.panel.add(this.label);
                        this.panel.add(this.button);
                        this.button.addActionListener(this);

                        this.tf.addFocusListener(this);
                        this.panel.add(this.tf);

                        this.pf.addFocusListener(this);
                        this.panel.add(this.pf);

                        this.area.addFocusListener(this);
                        this.panel.add(this.sc);

                        this.sex.add(this.man);
                        this.sex.add(this.woman);
                        this.panel.add(this.man);
                        this.panel.add(this.woman);

                        this.cb.addItem("北京");
                        this.cb.addItem("上海");
                        this.cb.addItem("天津");
                        this.cb.addItem("重庆");
                        this.cb.addActionListener(this);
                        this.panel.add(this.cb);

                        this.panel.add(this.sing);
                        this.panel.add(this.dance);

                        this.menu.add(this.fileOpen);
                        this.menu.add(this.fileSave);
                        this.menu.add(this.fileExit);
                        this.mb.add(this.menu);
                        this.setJMenuBar(this.mb);

                        this.panel.setBackground(Color.yellow);
                        this.panel.setForeground(Color.red);

                        this.addMouseListener(this);

                        this.add(this.panel);

                        this.setIconImage(this.logo);
                        this.setSize(200, 400);
                        this.setVisible(true);
                        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                        this.setLocation((this.rec.width - 150) / 2, (this.rec.height - 220) / 2);

                //        JOptionPane.showMessageDialog(null, "这是一个消息提示框");
                //        String msg = JOptionPane.showInputDialog("这是一个输入框");
                //        System.out.println(msg);
                //        int result = JOptionPane.showConfirmDialog(null, "这是一个确认框");
                //        System.out.println(result);

                //        try {
                //            desktop.open(new File("./src/FrameTest.java"));
                //        } catch (Exception e) {
                //            e.printStackTrace();
                //        }
                    }

                    private void addSystemTray() {
                        Image img = Toolkit.getDefaultToolkit().createImage("https://api.freelogodesign.org/assets/thumb/logo/54769_400.png");
                        TrayIcon tray = new TrayIcon(img);
                        try {
                            SystemTray.getSystemTray().add(tray);
                        } catch (AWTException e) {
                            e.printStackTrace();
                        }
                    }

                    public static void main(String[] args) {
                        new FrameTest();
                    }

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (this.button.equals(e.getSource())) {
                            System.out.println("Button clicked");
                        } else if (this.cb.equals(e.getSource())) {
                            System.out.println(this.cb.getSelectedItem());
                        }
                    }

                    @Override
                    public void focusGained(FocusEvent e) {
                        System.out.println(e);
                    }

                    @Override
                    public void focusLost(FocusEvent e) {
                        System.out.println(e);
                    }

                    @Override
                    public void keyTyped(KeyEvent e) {
                        System.out.println(e.getKeyChar());
                    }

                    @Override
                    public void keyPressed(KeyEvent e) {
                        System.out.println(e.getKeyChar());
                    }

                    @Override
                    public void keyReleased(KeyEvent e) {
                        System.out.println(e.getKeyChar());
                    }

                    @Override
                    public void mouseClicked(MouseEvent e) {
                        System.out.println(e.getX() + " " + e.getY());
                    }

                    @Override
                    public void mousePressed(MouseEvent e) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent e) {

                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {
                        System.out.println(e.getX() + " " + e.getY());
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {

                    }

                    @Override
                    public void windowOpened(WindowEvent e) {

                    }

                    @Override
                    public void windowClosing(WindowEvent e) {

                    }

                    @Override
                    public void windowClosed(WindowEvent e) {

                    }

                    @Override
                    public void windowIconified(WindowEvent e) {

                    }

                    @Override
                    public void windowDeiconified(WindowEvent e) {

                    }

                    @Override
                    public void windowActivated(WindowEvent e) {

                    }

                    @Override
                    public void windowDeactivated(WindowEvent e) {

                    }
                } 
                ```
            
            === "Line"
                ``` java
                import javax.swing.*;
                import java.awt.*;

                class MyPanel extends JPanel {
                    public void paint(Graphics g) {
                        System.out.println("paint");
                        g.setColor(Color.red);
                        g.drawLine(0, 0, this.getWidth(), this.getHeight());
                        g.drawLine(this.getWidth(), 0, 0, this.getHeight());

                        int left = this.getWidth() / 4;
                        int top = this.getHeight() / 4;
                        int width = this.getWidth() / 2;
                        int height = this.getHeight() / 2;
                        g.drawRect(left, top, width, height);

                        g.setColor(Color.darkGray);
                        g.drawRoundRect(left, top, width, height, width / 2, height / 2);

                        g.drawArc(left / 2, top / 2, width, height, 90, 180);
                    }
                }

                public class DrawLine extends JFrame {

                    public DrawLine() {
                        MyPanel mp = new MyPanel();
                        this.add(mp);
                        this.setSize(600, 400);
                        this.setVisible(true);
                        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
                        Rectangle rec = env.getDefaultScreenDevice().getDefaultConfiguration().getBounds();
                        this.setLocation((rec.width - this.getWidth()) / 2, (rec.height - this.getHeight()) / 2);
                    }

                    public static void main(String[] args) {
                        new DrawLine();
                    }
                }

                ```

            === "String"
                ``` java
                import javax.swing.*;
                import java.awt.*;
                import java.util.Random;

                class CodePanel extends JPanel {
                    public void paint(Graphics g) {
                        int height = this.getHeight();
                        int width = this.getWidth();

                        g.setColor(Color.white);
                        g.fillRect(0, 0, width, height);
                        Random random = new Random();
                        int number = random.nextInt(8999) + 1000;
                        String str = String.valueOf(number);
                        g.setColor(Color.blue);
                        g.setFont(new Font("", Font.PLAIN, this.getHeight() - 10));
                        g.drawString(str, 0, this.getHeight());
                        for (int i = 0; i < 100; i++) {
                            int x = random.nextInt(width);
                            int y = random.nextInt(height);
                            g.drawOval(x, y, 1, 1);
                        }
                    }
                }

                public class DrawString extends JFrame {

                    public DrawString() {
                        CodePanel codePanel = new CodePanel();
                        this.add(codePanel);
                        this.setSize(100, 70);
                        this.setVisible(true);

                        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
                        Rectangle rec = env.getDefaultScreenDevice().getDefaultConfiguration().getBounds();
                        this.setLocation((rec.width - this.getWidth()) / 2, (rec.height - this.getHeight()) / 2);
                    }

                    public static void main(String[] args) {
                        new DrawString();
                    }
                }

                ```
            === "Button"
                ``` java
                java 
                ```

            === "Input"
                ``` java
                java 
                ```

            === "Password"
                ``` java
                java 
                ```

            === "Textarea"
                ``` java
                java 
                ```

            === "Checkbox"
                ``` java
                java 
                ```

            === "Radio"
                ``` java
                java 
                ```

            === "Selection"
                ``` java
                java 
                ```