
            ===  "Callback / Callable"
                ``` php
                    <?php
                        // [callable](https://www.php.net/manual/en/language.types.callable.php)
                        // An example callback function
                        function my_callback_function($message="world") {
                            echo "hello $message!".PHP_EOL;
                        }

                        // An example callback method
                        class MyClass {
                            static function myCallbackMethod() {
                                echo 'Hello World!'.PHP_EOL;
                            }
                        }

                        // Type 1: Simple callback and pass variable
                        call_user_func('my_callback_function', "PHP");

                        // Type 2: Static class method call
                        call_user_func(array('MyClass', 'myCallbackMethod'));

                        // Type 3: Object method call
                        $obj = new MyClass();
                        call_user_func(array($obj, 'myCallbackMethod'));

                        // Type 4: Static class method call
                        call_user_func('MyClass::myCallbackMethod');

                        // Type 5: Relative static class method call
                        class A {
                            public static function who() {
                                echo "A\n";
                            }
                        }

                        class B extends A {
                            public static function who() {
                                echo "B\n";
                            }
                        }

                        call_user_func(array('B', 'parent::who')); // A

                        // Type 6: Objects implementing __invoke can be used as callables
                        class C {
                            public function __invoke($name) {
                                echo 'Hello ', $name, "\n";
                            }
                        }

                        $c = new C();
                        call_user_func($c, 'PHP!');
                ```