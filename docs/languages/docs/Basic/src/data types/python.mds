
        === "String"
            {% include "Basic/src/data types/python/string.mds" %}                

        === "Numeric"
            ```python
            ## [numbers](https://docs.python.org/3/tutorial/introduction.html#numbers)

            ## [Numeric literals](https://docs.python.org/3/reference/lexical_analysis.html#numeric-literals)

            ## [Numeric Types — int, float, complex](https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex)

            decimal = 1_000_000_000_000_000
            octal = 0o777777777777
            hex   = 0x123456789ABCDEF
            binary = 0b11101001010101010101

            for i in [decimal,octal, hex, binary]:
                print(i)
                
            ```
        
        === "Boolean"
            ``` python
            ## [boolean](https://docs.python.org/3/library/stdtypes.html#boolean-values)

            ```
        
        === "List"
            ``` python
            ## [Standard Generic Collections](https://docs.python.org/3/library/stdtypes.html#standard-generic-collections)

            ## [Sequence Types — list, tuple, range](https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range)

            print(list(range(10)))
            print(list(range(0, -10, -1)))
            for i in range(3):
                print(i)
            ```

        === "Set"
            ``` python
            ## [Set Types — set, frozenset](https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset)
            ```
        
        === "Dict"
            ``` python
            ## [Mapping Types — dict](https://docs.python.org/3/library/stdtypes.html#mapping-types-dict)

            a = dict(one=1, two=2, three=3)
            b = {'one': 1, 'two': 2, 'three': 3}
            c = dict(zip(['one', 'two', 'three'], [1, 2, 3]))
            d = dict([('two', 2), ('one', 1), ('three', 3)])
            e = dict({'three': 3, 'one': 1, 'two': 2})
            f = dict({'one': 1, 'three': 3}, two=2)
            print(a == b == c == d == e == f)
            print(a)
            print(list(a))
            print(a.keys())
            for i in a.keys():
                print(i)
            print(a.values())

            ```