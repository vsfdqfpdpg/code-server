
            * [classobj](https://www.php.net/manual/en/ref.classobj.php){: target=_blink }
            * [oop](https://www.php.net/manual/en/language.oop5.php){: target=_blink }
            ``` php
            <?php
                // [object](https://www.php.net/manual/en/language.types.object.php)
                class foo
                {
                    function do_foo()
                    {
                        echo "Doing foo.".PHP_EOL; 
                    }
                }

                $bar = new foo;
                $bar->do_foo();

                $obj = (object) array('1' => 'foo');
                var_dump(isset($obj->{'1'})); // outputs 'bool(true)' as of PHP 7.2.0; 'bool(false)' previously
                var_dump($obj->{'1'});
                var_dump(key($obj)); // outputs 'string(1) "1"' as of PHP 7.2.0; 'int(1)' previously

                $newobj = new stdClass();//create a new
                $newobj->name = "India";
                $newobj->work = "Development";
                $newobj->address="patna";
                var_dump($newobj);
                $new = (array)$newobj;//convert stdClass to array
                var_dump($new); //print new object
            ``` 

            * magic methods
            ``` php
            <?php 
                class Computer {
                    private $name;
                    private $memory;

                    public function __construct($name){
                        $this->name = $name;
                        echo __METHOD__." is called. ".PHP_EOL;
                        echo __FILE__.PHP_EOL;
                        echo __DIR__.PHP_EOL;
                    }

                    public function __destruct(){
                        echo __METHOD__." is called. ".PHP_EOL;
                    }

                    // [object.call](https://www.php.net/manual/en/language.oop5.overloading.php#object.call)
                    public function __call(string $name , array $arguments){
                        echo __CLASS__. " do not have \"$name\" method".PHP_EOL;
                        print_r($arguments);
                        echo PHP_EOL;
                    }

                    // [object.callstatic](https://www.php.net/manual/en/language.oop5.overloading.php#object.callstatic)
                    public static function __callStatic(string $name , array $arguments){

                    }
                    
                    // [object.get](https://www.php.net/manual/en/language.oop5.overloading.php#object.get)
                    public function __get(string $name){
                        echo __METHOD__." is called".PHP_EOL;
                        return $this->$name;
                    }

                    // [object.set](https://www.php.net/manual/en/language.oop5.overloading.php#object.set)
                    public function __set(string $name , $value ){
                        echo __METHOD__." is called".PHP_EOL;
                        $this->$name = $value;
                    }

                    // [object.isset](https://www.php.net/manual/en/language.oop5.overloading.php#object.isset)
                    public function __isset(string $name){
                        echo __METHOD__." is called, and argument is $name ".PHP_EOL;
                        return isset($this->$name);
                    }

                    // [object.unset](https://www.php.net/manual/en/language.oop5.overloading.php#object.unset)
                    public function __unset(string $name){
                        echo __METHOD__." is called, and argument is $name ".PHP_EOL;
                    }

                    // [object.sleep](https://www.php.net/manual/en/language.oop5.magic.php#object.sleep)
                    public function __sleep(){
                        echo __METHOD__." is called. ".PHP_EOL;
                    }
                    
                    // [object.wakeup](https://www.php.net/manual/en/language.oop5.magic.php#object.wakeup)
                    public function __wakeup(){
                        echo __METHOD__." is called. ".PHP_EOL;
                    }
                    
                    // [object.serialize](https://www.php.net/manual/en/language.oop5.magic.php#object.serialize)
                    public function __serialize(){
                        echo __METHOD__." is called. ".PHP_EOL;
                        return get_object_vars($this);
                    }
                    
                    // [object.unserialize](https://www.php.net/manual/en/language.oop5.magic.php#object.unserialize)
                    public function __unserialize(array $data){
                        echo __METHOD__." is called. ".PHP_EOL;
                        $this->name = $data["name"];
                        $this->memory = $data["memory"];
                    }
                    
                    // [object.tostring](https://www.php.net/manual/en/language.oop5.magic.php#object.tostring)
                    public function __toString(){
                        echo __METHOD__." is called. ".PHP_EOL;

                        print_r(get_class_methods(__CLASS__));
                        echo PHP_EOL;

                        print_r(get_object_vars($this));
                        echo PHP_EOL;

                        return $this->name.PHP_EOL;
                    }

                    // [object.invoke](https://www.php.net/manual/en/language.oop5.magic.php#object.invoke)
                    public function __invoke(){

                    }

                    // [object.set-state](https://www.php.net/manual/en/language.oop5.magic.php#object.set-state)
                    public function __set_state(){

                    }
                    
                    // [object.clone](https://www.php.net/manual/en/language.oop5.cloning.php#object.clone)
                    public function __clone(){
                        echo __METHOD__." is called. ".PHP_EOL;
                    }

                    // [object.debuginfo](https://www.php.net/manual/en/language.oop5.magic.php#object.debuginfo)
                    public function __debugInfo(){

                    }

                    public function powerOn(){

                    }
                }

                class NoteBook extends Computer {
                    public function __construct($name){
                        parent::__construct($name);
                        echo __CLASS__." parent class is ".get_parent_class().PHP_EOL;
                    }

                    public function powerOn(){
                        
                    }
                }

                $tom = new NoteBook("Apple");
                $copy = clone $tom;

                echo get_class($copy),PHP_EOL;

                echo is_subclass_of($tom, "Computer") ? "true" : "false", PHP_EOL;

                echo interface_exists("USB") ? "true" : "false", PHP_EOL;

                echo $tom;
                $tom->methodNotExist(1,"iso");
                
                echo isset($tom->name) ? "true" : "false";
                echo PHP_EOL;

                $tom->memory = 4 * 1024 * 1024;
                echo $tom->memory.PHP_EOL;

                unset($tom->memory);

                $objString = serialize($tom);
                echo $objString.PHP_EOL;

                $obj = unserialize($objString);
                echo $obj.PHP_EOL;
                echo PHP_EOL;    

                echo method_exists($tom, "powerOff") ? "true" : "false", PHP_EOL;

                echo property_exists($tom, "name") ? "true" : "false", PHP_EOL;
            ```

            * spl_autoload_register
            ``` php
            <?php
                class AutoLoader{
                    public static function load($className){
                        echo __METHOD__." is called and argument is $className".PHP_EOL;
                    }
                }

                spl_autoload_register(["AutoLoader","load"]);

                spl_autoload_register(function($className){
                   class NoteBook {

                   }
                   echo $className.PHP_EOL;
                }, false, false);

                new NoteBook();
            ```

            * get_declared_classes, get_declared_interfaces, get_declared_traits
            * get_loaded_extensions, get_extension_funcs
            ``` php  
            <?php
                print_r(get_declared_classes());
                echo PHP_EOL;

                print_r(get_declared_interfaces());
                echo PHP_EOL;

                print_r(get_declared_traits());
                echo PHP_EOL;

                print_r(get_loaded_extensions());
                echo PHP_EOL;

                print_r(get_extension_funcs("xml"));
                echo PHP_EOL;
            ```